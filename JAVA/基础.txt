Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-10-09T22:38:24+08:00

====== 基础 ======
创建日期 星期一 09 十月 2017

注释
// 当行
/* */ 多行
/** */ 文档注释



运算符 优先使用带等号的


+  +=
- -=
* *=
/ /=
% 取余 %=
++ 自增
-- 自减

逻辑运算符
&& 与  存在短路
& 与 不短路与
|| 或 存在短路
| 或 不短路或
！ 非
^ 异或  两个操作数不相同时为真，否则为假


！=
= =
>
<
>=
<=

==和!=适用于所有的基本数据类型，其他关系运算符不适用于boolean，因为boolean值只有true和false，比较没有任何意义。
if (true>false) //错误
==和!=也适用于所有对象，可以比较对象的引用是否相同
C语言中，非0就是true，0就是false，然而这个规则不适用于Java，Java的int不能自动转为boolean。参考while(true){} 而不是while(1){}。




位运算符  只用于整型
&按位与
|按位或
～按位非
^按位异或
<< 左移 右边补0 相当于乘以2的位数次方
>>右移  左边以符号位填充 相当于除以2的位数次方
>>>无符号右移 左边以0填充

整数的编码与原码一致，负数的编码与补码一致
 补码：反码加1
反码：原码除符号位外，各位取反

注意
低于int的类型（byte/short/char）的操作数需要先自动类型转换为int后再移位
对于int类型的整数移位a>>b 当b>32 时，b先对32取余，余数为真正移动的位数
对于long类型的  对64取余

三目运算符

（条件） ？ 语句1 ： 语句2；


控制语句

if(条件)
{语句}
else
{语句}

swith(表达式)   值只能是byte/short/char/int/string/枚举
{
case 值1：
代码
break;
case 值2:
代码
break;
default :
}

whlie(条件)
{代码块}

do
{代码块}
whlie{条件}


for(变量初始化或定义并初始化;条件;变化)
{语句}


break 默认跳出当前循环，可以通过标签跳出指定循环
标签 是一个紧跟着英文冒号的标志符，且必须定义在指定for循环之前，且在break 之前；

标签使用
break 标志符;

continue

continue 默认是当前循环，也可以使用类似break的标签









注意

byte a=5;
a=a+5;// 报错
a+=5;//正确









}






