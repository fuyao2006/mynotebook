Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-10-11T21:37:18+08:00

====== 面向对象1 ======
创建日期 星期三 11 十月 2017

类定义
[修饰符] class 类名
{
零个到多个构造器
零个到多个变量
零个多多个方法
}
修饰符：public final abstract
 变量定义
[修饰符] 类型 变量名[=默认值] 
修饰符：public protected private static final 

方法定义
[修饰符] 类型 方法名（形参列表）
修饰符：public protected private static final  abstract

构造器
[修饰符] 构造器名（形参列表）
修饰符：public protected private

静态方法不能直接调用非静态方法
静态方法不能使用this引用
非静态方法只能用对象调用


参数可变的方法

定义方法时，在最后一个参数的类型后面添加三个点（...） 表明该形参可以接受多个参数
此参数在方法内可以看作数组使用

数组参数也可以实现，但是数组参数传递的必须是数组，数组参数可以在参数列表的任意位置，可变参数只能在最后。

方法重载
同一类中方法名相同，参数列表不同 两同一不同


变量
不能定义两个同名的成员变量，局部变量可以和成员变量同名，局部变量会覆盖成员变量
类变量随类的存在而存在，实例变量随实例的存在而存在
类变量变量必须使用《 类名.变量名》的形式引用 不建议使用实例变量的方式引用

变量的使用规则
成员变量
1.类的属性字段
2.需要多个方法共享的字段
3.状态字段

尽量减小类的作用域，能用局部变量的地方，不能使用成员变量



包
package 包名 源文件的第一个非注释行
使用
javac -d 文件夹 源文件  推荐使用-d 选项
import 导入指定包层次下的子类，但不能导入子包的类
import static 导入静态的类/方法/成员变量

构造器
public class Apple
{
Apple(String a,String b)
{}
Apple(String a,String b,String c)////注意这种方式
{this(a,b);
this.c=c;
}

}


类继承
修饰符 class subclass extends superclass
{
类体
}
子类是一种特殊的父类

方法的重写
两同：方法名相同，形参列表相同
两小：返回值类型比父类的小或相同；抛出的异常更小或相同
一大：访问权限更大或相同

注意：重写方法，要么都是实例方法，要么都是类方法，不能不同

父类的方法被定义为private时，子类无法访问父类方法，此时子类中定义的同名方法，不是重写，是定义的另外一个方法，没有以上限制

super 限定
在子类中，用super限制调用父类的方法/属性等


构造器
1.子类构造器第一行用super调用父类的构造器
2.子类第一行调用本类的this构造器，this中调用super
3.子类如果不掉用父类的构造器，则调用父类的无参数构造器

子类继承了父类了所有可见元素方法，除private 修饰的外，均可以用super 限定调用

构造器的执行顺序
创建任何对象总是从该类所在的继承树最顶层类的构造器开始执行

多态
相同类型的变量，调用同一个方法时呈现出多种不同的行为特征，这就是多态

引用类型之间的转换，只能是存在继承关系的类型之间

子类可以直接赋值给父类，无需装换。
父类赋值给子类时，必须要用强制










